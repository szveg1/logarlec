@startuml

top to bottom direction
scale 2480*3508
skinparam linetype ortho

interface IObservable {
  + addObserver(DrawObserver) : void
  + removeObserver(DrawObserver) : void
  + notifyObserver() : void
}

abstract class DrawObservable implements IObservable {
}

class Ember extends DrawObservable {
  + addObserver(DrawObserver) : void
  + removeObserver(DrawObserver) : void
  + notifyObserver() : void

}

class Targy extends DrawObservable {
  + addObserver(DrawObserver) : void
  + removeObserver(DrawObserver) : void
  + notifyObserver() : void
  + accept(TargyVisitorGrafikus) : void
}

class Szoba extends DrawObservable {
  + addObserver(DrawObserver) : void
  + removeObserver(DrawObserver) : void
  + notifyObserver() : void

}

interface DrawObserver {
  + update(): void
}

interface TargyVisitorGrafikus {
  + void visit(Logarlec)
  + void visit(TVSZ)
  + void visit(Pohar)
  + void visit(Rongy)
  + void visit(Maszk)
  + void visit(Legfrissito)
  + void visit(HamisMaszk)
  + void visit(HamisLec)
  + void visit(HamisTVSZ)
}

abstract class TargyButton implements TargyVisitorGrafikus{
  + TargyButton():
  + update()
  # targy: Targy
  # paintComponent(Graphics): void
}

abstract class TargyButton extends JButton implements DrawObserver

class TargyFoldonButton extends TargyButton {
  + TargyFoldonButton():
  + update()
}

class TargyInventoryButton extends TargyButton {
  + TargyInventoryButton():
  + update()
}

class DoorButton extends JButton{
  + door: Ajto
  + DoorButton(): 
  # paintComponent(Graphics): void
}

interface EmberVisitor {
  + visitHallgato(Hallgato) : void
  + visitTakarito(Takarito) : void
  + visitOktato(Oktato) : void
}


class EmberLabel extends JLabel{
  + EmberLabel(Ember):
  + visitHallgato(Hallgato) : void
  + visitTakarito(Takarito) : void
  + visitOktato(Oktato) : void
}
class EmberLabel implements DrawObserver
class EmberLabel implements EmberVisitor 


class GameFrame extends JFrame {
  + GameFrame(): 
  - getPopupMenu(): JPopupMenu
}

class MenuFrame extends JFrame {
  + MenuFrame(): 
}

class MenuPanel extends JPanel{
  - loadDialog(): void  
  - makePlayPanel(): JPanel  
  + MenuPanel(): 
  + paintComponent(Graphics): void
}



class SzobaPanel extends JPanel{
  # paintComponent(Graphics): void  
  + SzobaPanel(Szoba, Dimension)
  + update() : void
}
class SzobaPanel implements DrawObserver 



class InventoryPanel extends JPanel{
  + InventoryPanel()
  + update() : void
}
class InventoryPanel implements DrawObserver 



DrawObservable "1" o--> "*" DrawObserver : értesíti
InventoryPanel --> Controller : elkéri a soron levő játékost
InventoryPanel "1" *--> "5" JLabel : cells
GameFrame "1" *--> "1" InventoryPanel
SzobaPanel "1" *--> "*" DoorButton
SzobaPanel "1" *--> "*" TargyButton
SzobaPanel --> JPanel : jobbPanel
SzobaPanel --> JPanel : balPanel


@enduml